#!/usr/bin/env node
var colors = require('colors');
var fs = require('fs');
var program = require('commander');
var pjson = require(__dirname + '/../package.json');

var bless = require('../lib/index');


program
  .version(pjson.version)
  .usage('<input file> [<output file>] [options]')
  .option('-f, --force', 'modify the input file provided'.yellow)
  .parse(process.argv);


// Input is the first argument passed to the binary after options flags have
// been stripped.
//
var input = program.args[0];

if (!input) {
  console.log('blessc: no input provided'.red);
  process.exit(1);
}


// If input is not to be read from stdin, perform a simple check to see if
// that the file has a .css extension.
//
if (input !== '-' && !/\.css$/.test(input)) {
  console.log('blessc: input file is not a .css file'.red);
  process.exit(1);
}


// Output is the second (optional) argument passed to the binary after options
// flags have been stripped.
//
var output = program.args[1];

// If output was not provided, use the input parameter
//
output = output || input;

// Exit if output was not provided and the input is to be read from stdin.
//
if (output === '-') {
  console.log('blessc: no output file provided'.red);
  process.exit(1);
}

// Exit if output is equal to input and the "force" flag was not used, to
// prevent unintentional modifications to the source file.
//
if (output === input && !program.force) {
  console.log('blessc: use --force or -f to modify the input file'.red);
  process.exit(1);
}


// For now, assume that the input is not stdin.
//
fs.readFile(input, 'utf8', function(err, data) {
  if (err) {
    throw err;
  }

  var filesData = bless(data);
});
